//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("ConektBillingModel", "FK_AccountContact_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Conekt.Billing.Models.Account), "AccountContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Conekt.Billing.Models.AccountContact), true)]
[assembly: EdmRelationshipAttribute("ConektBillingModel", "FK_AccountKey_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Conekt.Billing.Models.Account), "AccountKey", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Conekt.Billing.Models.AccountKey), true)]
[assembly: EdmRelationshipAttribute("ConektBillingModel", "FK_Transaction_Account", "Account", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Conekt.Billing.Models.Account), "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Conekt.Billing.Models.Transaction), true)]
[assembly: EdmRelationshipAttribute("ConektBillingModel", "FK_AccountContact_AccountRole", "AccountRole", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Conekt.Billing.Models.AccountRole), "AccountContact", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Conekt.Billing.Models.AccountContact), true)]
[assembly: EdmRelationshipAttribute("ConektBillingModel", "FK_TransactionImport_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Conekt.Billing.Models.Transaction), "TransactionImport", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Conekt.Billing.Models.TransactionImport), true)]
[assembly: EdmRelationshipAttribute("ConektBillingModel", "FK_TransactionItem_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Conekt.Billing.Models.Transaction), "TransactionItem", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Conekt.Billing.Models.TransactionItem), true)]
[assembly: EdmRelationshipAttribute("ConektBillingModel", "FK_User_Transaction", "Transaction", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Conekt.Billing.Models.Transaction), "TransactionUser", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Conekt.Billing.Models.TransactionUser), true)]

#endregion

namespace Conekt.Billing.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class ConektBillingEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new ConektBillingEntities object using the connection string found in the 'ConektBillingEntities' section of the application configuration file.
        /// </summary>
        public ConektBillingEntities() : base("name=ConektBillingEntities", "ConektBillingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConektBillingEntities object.
        /// </summary>
        public ConektBillingEntities(string connectionString) : base(connectionString, "ConektBillingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new ConektBillingEntities object.
        /// </summary>
        public ConektBillingEntities(EntityConnection connection) : base(connection, "ConektBillingEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Account> Account
        {
            get
            {
                if ((_Account == null))
                {
                    _Account = base.CreateObjectSet<Account>("Account");
                }
                return _Account;
            }
        }
        private ObjectSet<Account> _Account;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountContact> AccountContact
        {
            get
            {
                if ((_AccountContact == null))
                {
                    _AccountContact = base.CreateObjectSet<AccountContact>("AccountContact");
                }
                return _AccountContact;
            }
        }
        private ObjectSet<AccountContact> _AccountContact;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountKey> AccountKey
        {
            get
            {
                if ((_AccountKey == null))
                {
                    _AccountKey = base.CreateObjectSet<AccountKey>("AccountKey");
                }
                return _AccountKey;
            }
        }
        private ObjectSet<AccountKey> _AccountKey;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<AccountRole> AccountRole
        {
            get
            {
                if ((_AccountRole == null))
                {
                    _AccountRole = base.CreateObjectSet<AccountRole>("AccountRole");
                }
                return _AccountRole;
            }
        }
        private ObjectSet<AccountRole> _AccountRole;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transaction> Transaction
        {
            get
            {
                if ((_Transaction == null))
                {
                    _Transaction = base.CreateObjectSet<Transaction>("Transaction");
                }
                return _Transaction;
            }
        }
        private ObjectSet<Transaction> _Transaction;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionImport> TransactionImport
        {
            get
            {
                if ((_TransactionImport == null))
                {
                    _TransactionImport = base.CreateObjectSet<TransactionImport>("TransactionImport");
                }
                return _TransactionImport;
            }
        }
        private ObjectSet<TransactionImport> _TransactionImport;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionItem> TransactionItem
        {
            get
            {
                if ((_TransactionItem == null))
                {
                    _TransactionItem = base.CreateObjectSet<TransactionItem>("TransactionItem");
                }
                return _TransactionItem;
            }
        }
        private ObjectSet<TransactionItem> _TransactionItem;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<TransactionUser> TransactionUser
        {
            get
            {
                if ((_TransactionUser == null))
                {
                    _TransactionUser = base.CreateObjectSet<TransactionUser>("TransactionUser");
                }
                return _TransactionUser;
            }
        }
        private ObjectSet<TransactionUser> _TransactionUser;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Account EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccount(Account account)
        {
            base.AddObject("Account", account);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountContact EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountContact(AccountContact accountContact)
        {
            base.AddObject("AccountContact", accountContact);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountKey EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountKey(AccountKey accountKey)
        {
            base.AddObject("AccountKey", accountKey);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the AccountRole EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToAccountRole(AccountRole accountRole)
        {
            base.AddObject("AccountRole", accountRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transaction EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransaction(Transaction transaction)
        {
            base.AddObject("Transaction", transaction);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionImport EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionImport(TransactionImport transactionImport)
        {
            base.AddObject("TransactionImport", transactionImport);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionItem EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionItem(TransactionItem transactionItem)
        {
            base.AddObject("TransactionItem", transactionItem);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the TransactionUser EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransactionUser(TransactionUser transactionUser)
        {
            base.AddObject("TransactionUser", transactionUser);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConektBillingModel", Name="Account")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Account : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Account object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="merchantApiKey">Initial value of the MerchantApiKey property.</param>
        /// <param name="passPhrase">Initial value of the PassPhrase property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Account CreateAccount(global::System.Guid id, global::System.String name, global::System.String merchantApiKey, global::System.String passPhrase, global::System.DateTime dateCreated)
        {
            Account account = new Account();
            account.ID = id;
            account.Name = name;
            account.MerchantApiKey = merchantApiKey;
            account.PassPhrase = passPhrase;
            account.DateCreated = dateCreated;
            return account;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MerchantApiKey
        {
            get
            {
                return _MerchantApiKey;
            }
            set
            {
                OnMerchantApiKeyChanging(value);
                ReportPropertyChanging("MerchantApiKey");
                _MerchantApiKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("MerchantApiKey");
                OnMerchantApiKeyChanged();
            }
        }
        private global::System.String _MerchantApiKey;
        partial void OnMerchantApiKeyChanging(global::System.String value);
        partial void OnMerchantApiKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PassPhrase
        {
            get
            {
                return _PassPhrase;
            }
            set
            {
                OnPassPhraseChanging(value);
                ReportPropertyChanging("PassPhrase");
                _PassPhrase = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PassPhrase");
                OnPassPhraseChanged();
            }
        }
        private global::System.String _PassPhrase;
        partial void OnPassPhraseChanging(global::System.String value);
        partial void OnPassPhraseChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_AccountContact_Account", "AccountContact")]
        public EntityCollection<AccountContact> AccountContact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContact>("ConektBillingModel.FK_AccountContact_Account", "AccountContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContact>("ConektBillingModel.FK_AccountContact_Account", "AccountContact", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_AccountKey_Account", "AccountKey")]
        public EntityCollection<AccountKey> AccountKey
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountKey>("ConektBillingModel.FK_AccountKey_Account", "AccountKey");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountKey>("ConektBillingModel.FK_AccountKey_Account", "AccountKey", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_Transaction_Account", "Transaction")]
        public EntityCollection<Transaction> Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transaction>("ConektBillingModel.FK_Transaction_Account", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transaction>("ConektBillingModel.FK_Transaction_Account", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConektBillingModel", Name="AccountContact")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountContact : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountContact object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="accountRoleID">Initial value of the AccountRoleID property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static AccountContact CreateAccountContact(global::System.Guid id, global::System.Guid accountID, global::System.Guid accountRoleID, global::System.String firstName, global::System.String lastName, global::System.String phone, global::System.String email)
        {
            AccountContact accountContact = new AccountContact();
            accountContact.ID = id;
            accountContact.AccountID = accountID;
            accountContact.AccountRoleID = accountRoleID;
            accountContact.FirstName = firstName;
            accountContact.LastName = lastName;
            accountContact.Phone = phone;
            accountContact.Email = email;
            return accountContact;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Guid _AccountID;
        partial void OnAccountIDChanging(global::System.Guid value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountRoleID
        {
            get
            {
                return _AccountRoleID;
            }
            set
            {
                OnAccountRoleIDChanging(value);
                ReportPropertyChanging("AccountRoleID");
                _AccountRoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountRoleID");
                OnAccountRoleIDChanged();
            }
        }
        private global::System.Guid _AccountRoleID;
        partial void OnAccountRoleIDChanging(global::System.Guid value);
        partial void OnAccountRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhoneExt
        {
            get
            {
                return _PhoneExt;
            }
            set
            {
                OnPhoneExtChanging(value);
                ReportPropertyChanging("PhoneExt");
                _PhoneExt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneExt");
                OnPhoneExtChanged();
            }
        }
        private Nullable<global::System.Int32> _PhoneExt;
        partial void OnPhoneExtChanging(Nullable<global::System.Int32> value);
        partial void OnPhoneExtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_AccountContact_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("ConektBillingModel.FK_AccountContact_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("ConektBillingModel.FK_AccountContact_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("ConektBillingModel.FK_AccountContact_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("ConektBillingModel.FK_AccountContact_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_AccountContact_AccountRole", "AccountRole")]
        public AccountRole AccountRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountRole>("ConektBillingModel.FK_AccountContact_AccountRole", "AccountRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountRole>("ConektBillingModel.FK_AccountContact_AccountRole", "AccountRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<AccountRole> AccountRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<AccountRole>("ConektBillingModel.FK_AccountContact_AccountRole", "AccountRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<AccountRole>("ConektBillingModel.FK_AccountContact_AccountRole", "AccountRole", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConektBillingModel", Name="AccountKey")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountKey : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountKey object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="apiKey">Initial value of the ApiKey property.</param>
        /// <param name="isActive">Initial value of the IsActive property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static AccountKey CreateAccountKey(global::System.Guid id, global::System.Guid accountID, global::System.Guid apiKey, global::System.Boolean isActive, global::System.DateTime dateCreated)
        {
            AccountKey accountKey = new AccountKey();
            accountKey.ID = id;
            accountKey.AccountID = accountID;
            accountKey.ApiKey = apiKey;
            accountKey.IsActive = isActive;
            accountKey.DateCreated = dateCreated;
            return accountKey;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Guid _AccountID;
        partial void OnAccountIDChanging(global::System.Guid value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApiKey
        {
            get
            {
                return _ApiKey;
            }
            set
            {
                OnApiKeyChanging(value);
                ReportPropertyChanging("ApiKey");
                _ApiKey = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApiKey");
                OnApiKeyChanged();
            }
        }
        private global::System.Guid _ApiKey;
        partial void OnApiKeyChanging(global::System.Guid value);
        partial void OnApiKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsActive
        {
            get
            {
                return _IsActive;
            }
            set
            {
                OnIsActiveChanging(value);
                ReportPropertyChanging("IsActive");
                _IsActive = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsActive");
                OnIsActiveChanged();
            }
        }
        private global::System.Boolean _IsActive;
        partial void OnIsActiveChanging(global::System.Boolean value);
        partial void OnIsActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateUpdated
        {
            get
            {
                return _DateUpdated;
            }
            set
            {
                OnDateUpdatedChanging(value);
                ReportPropertyChanging("DateUpdated");
                _DateUpdated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateUpdated");
                OnDateUpdatedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateUpdated;
        partial void OnDateUpdatedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateUpdatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_AccountKey_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("ConektBillingModel.FK_AccountKey_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("ConektBillingModel.FK_AccountKey_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("ConektBillingModel.FK_AccountKey_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("ConektBillingModel.FK_AccountKey_Account", "Account", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConektBillingModel", Name="AccountRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class AccountRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new AccountRole object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static AccountRole CreateAccountRole(global::System.Guid id, global::System.String name)
        {
            AccountRole accountRole = new AccountRole();
            accountRole.ID = id;
            accountRole.Name = name;
            return accountRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_AccountContact_AccountRole", "AccountContact")]
        public EntityCollection<AccountContact> AccountContact
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<AccountContact>("ConektBillingModel.FK_AccountContact_AccountRole", "AccountContact");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<AccountContact>("ConektBillingModel.FK_AccountContact_AccountRole", "AccountContact", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConektBillingModel", Name="Transaction")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transaction : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transaction object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="accountID">Initial value of the AccountID property.</param>
        /// <param name="chargeRequestID">Initial value of the ChargeRequestID property.</param>
        /// <param name="merchant">Initial value of the Merchant property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="paymentMethod">Initial value of the PaymentMethod property.</param>
        /// <param name="currency">Initial value of the Currency property.</param>
        /// <param name="total">Initial value of the Total property.</param>
        /// <param name="quickbooksCustomer">Initial value of the QuickbooksCustomer property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static Transaction CreateTransaction(global::System.Guid id, global::System.Guid accountID, global::System.String chargeRequestID, global::System.String merchant, global::System.String userName, global::System.String paymentMethod, global::System.String currency, global::System.Decimal total, global::System.String quickbooksCustomer, global::System.DateTime dateCreated)
        {
            Transaction transaction = new Transaction();
            transaction.ID = id;
            transaction.AccountID = accountID;
            transaction.ChargeRequestID = chargeRequestID;
            transaction.Merchant = merchant;
            transaction.UserName = userName;
            transaction.PaymentMethod = paymentMethod;
            transaction.Currency = currency;
            transaction.Total = total;
            transaction.QuickbooksCustomer = quickbooksCustomer;
            transaction.DateCreated = dateCreated;
            return transaction;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid AccountID
        {
            get
            {
                return _AccountID;
            }
            set
            {
                OnAccountIDChanging(value);
                ReportPropertyChanging("AccountID");
                _AccountID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("AccountID");
                OnAccountIDChanged();
            }
        }
        private global::System.Guid _AccountID;
        partial void OnAccountIDChanging(global::System.Guid value);
        partial void OnAccountIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ChargeRequestID
        {
            get
            {
                return _ChargeRequestID;
            }
            set
            {
                OnChargeRequestIDChanging(value);
                ReportPropertyChanging("ChargeRequestID");
                _ChargeRequestID = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ChargeRequestID");
                OnChargeRequestIDChanged();
            }
        }
        private global::System.String _ChargeRequestID;
        partial void OnChargeRequestIDChanging(global::System.String value);
        partial void OnChargeRequestIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Merchant
        {
            get
            {
                return _Merchant;
            }
            set
            {
                OnMerchantChanging(value);
                ReportPropertyChanging("Merchant");
                _Merchant = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Merchant");
                OnMerchantChanged();
            }
        }
        private global::System.String _Merchant;
        partial void OnMerchantChanging(global::System.String value);
        partial void OnMerchantChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PaymentMethod
        {
            get
            {
                return _PaymentMethod;
            }
            set
            {
                OnPaymentMethodChanging(value);
                ReportPropertyChanging("PaymentMethod");
                _PaymentMethod = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PaymentMethod");
                OnPaymentMethodChanged();
            }
        }
        private global::System.String _PaymentMethod;
        partial void OnPaymentMethodChanging(global::System.String value);
        partial void OnPaymentMethodChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PaymentLast4
        {
            get
            {
                return _PaymentLast4;
            }
            set
            {
                OnPaymentLast4Changing(value);
                ReportPropertyChanging("PaymentLast4");
                _PaymentLast4 = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PaymentLast4");
                OnPaymentLast4Changed();
            }
        }
        private Nullable<global::System.Int32> _PaymentLast4;
        partial void OnPaymentLast4Changing(Nullable<global::System.Int32> value);
        partial void OnPaymentLast4Changed();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Currency
        {
            get
            {
                return _Currency;
            }
            set
            {
                OnCurrencyChanging(value);
                ReportPropertyChanging("Currency");
                _Currency = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Currency");
                OnCurrencyChanged();
            }
        }
        private global::System.String _Currency;
        partial void OnCurrencyChanging(global::System.String value);
        partial void OnCurrencyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal Total
        {
            get
            {
                return _Total;
            }
            set
            {
                OnTotalChanging(value);
                ReportPropertyChanging("Total");
                _Total = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Total");
                OnTotalChanged();
            }
        }
        private global::System.Decimal _Total;
        partial void OnTotalChanging(global::System.Decimal value);
        partial void OnTotalChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String QuickbooksCustomer
        {
            get
            {
                return _QuickbooksCustomer;
            }
            set
            {
                OnQuickbooksCustomerChanging(value);
                ReportPropertyChanging("QuickbooksCustomer");
                _QuickbooksCustomer = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("QuickbooksCustomer");
                OnQuickbooksCustomerChanged();
            }
        }
        private global::System.String _QuickbooksCustomer;
        partial void OnQuickbooksCustomerChanging(global::System.String value);
        partial void OnQuickbooksCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_Transaction_Account", "Account")]
        public Account Account
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("ConektBillingModel.FK_Transaction_Account", "Account").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("ConektBillingModel.FK_Transaction_Account", "Account").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Account> AccountReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Account>("ConektBillingModel.FK_Transaction_Account", "Account");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Account>("ConektBillingModel.FK_Transaction_Account", "Account", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_TransactionImport_Transaction", "TransactionImport")]
        public EntityCollection<TransactionImport> TransactionImport
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionImport>("ConektBillingModel.FK_TransactionImport_Transaction", "TransactionImport");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionImport>("ConektBillingModel.FK_TransactionImport_Transaction", "TransactionImport", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_TransactionItem_Transaction", "TransactionItem")]
        public EntityCollection<TransactionItem> TransactionItem
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionItem>("ConektBillingModel.FK_TransactionItem_Transaction", "TransactionItem");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionItem>("ConektBillingModel.FK_TransactionItem_Transaction", "TransactionItem", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_User_Transaction", "TransactionUser")]
        public EntityCollection<TransactionUser> TransactionUser
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<TransactionUser>("ConektBillingModel.FK_User_Transaction", "TransactionUser");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<TransactionUser>("ConektBillingModel.FK_User_Transaction", "TransactionUser", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConektBillingModel", Name="TransactionImport")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionImport : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionImport object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="batchID">Initial value of the BatchID property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static TransactionImport CreateTransactionImport(global::System.Guid id, global::System.Guid transactionID, global::System.Guid batchID, global::System.DateTime dateCreated)
        {
            TransactionImport transactionImport = new TransactionImport();
            transactionImport.ID = id;
            transactionImport.TransactionID = transactionID;
            transactionImport.BatchID = batchID;
            transactionImport.DateCreated = dateCreated;
            return transactionImport;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Guid _TransactionID;
        partial void OnTransactionIDChanging(global::System.Guid value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid BatchID
        {
            get
            {
                return _BatchID;
            }
            set
            {
                OnBatchIDChanging(value);
                ReportPropertyChanging("BatchID");
                _BatchID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BatchID");
                OnBatchIDChanged();
            }
        }
        private global::System.Guid _BatchID;
        partial void OnBatchIDChanging(global::System.Guid value);
        partial void OnBatchIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_TransactionImport_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("ConektBillingModel.FK_TransactionImport_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("ConektBillingModel.FK_TransactionImport_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("ConektBillingModel.FK_TransactionImport_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("ConektBillingModel.FK_TransactionImport_Transaction", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConektBillingModel", Name="TransactionItem")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionItem : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionItem object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="code">Initial value of the Code property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="unitPrice">Initial value of the UnitPrice property.</param>
        /// <param name="taxRate">Initial value of the TaxRate property.</param>
        public static TransactionItem CreateTransactionItem(global::System.Guid id, global::System.Guid transactionID, global::System.String code, global::System.String name, global::System.Int32 quantity, global::System.Decimal unitPrice, global::System.Decimal taxRate)
        {
            TransactionItem transactionItem = new TransactionItem();
            transactionItem.ID = id;
            transactionItem.TransactionID = transactionID;
            transactionItem.Code = code;
            transactionItem.Name = name;
            transactionItem.Quantity = quantity;
            transactionItem.UnitPrice = unitPrice;
            transactionItem.TaxRate = taxRate;
            return transactionItem;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Guid _TransactionID;
        partial void OnTransactionIDChanging(global::System.Guid value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Code
        {
            get
            {
                return _Code;
            }
            set
            {
                OnCodeChanging(value);
                ReportPropertyChanging("Code");
                _Code = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Code");
                OnCodeChanged();
            }
        }
        private global::System.String _Code;
        partial void OnCodeChanging(global::System.String value);
        partial void OnCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal UnitPrice
        {
            get
            {
                return _UnitPrice;
            }
            set
            {
                OnUnitPriceChanging(value);
                ReportPropertyChanging("UnitPrice");
                _UnitPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UnitPrice");
                OnUnitPriceChanged();
            }
        }
        private global::System.Decimal _UnitPrice;
        partial void OnUnitPriceChanging(global::System.Decimal value);
        partial void OnUnitPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Decimal TaxRate
        {
            get
            {
                return _TaxRate;
            }
            set
            {
                OnTaxRateChanging(value);
                ReportPropertyChanging("TaxRate");
                _TaxRate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TaxRate");
                OnTaxRateChanged();
            }
        }
        private global::System.Decimal _TaxRate;
        partial void OnTaxRateChanging(global::System.Decimal value);
        partial void OnTaxRateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_TransactionItem_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("ConektBillingModel.FK_TransactionItem_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("ConektBillingModel.FK_TransactionItem_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("ConektBillingModel.FK_TransactionItem_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("ConektBillingModel.FK_TransactionItem_Transaction", "Transaction", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="ConektBillingModel", Name="TransactionUser")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class TransactionUser : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new TransactionUser object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="transactionID">Initial value of the TransactionID property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="firstName">Initial value of the FirstName property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        /// <param name="phone">Initial value of the Phone property.</param>
        /// <param name="email">Initial value of the Email property.</param>
        public static TransactionUser CreateTransactionUser(global::System.Guid id, global::System.Guid transactionID, global::System.String userName, global::System.String firstName, global::System.String lastName, global::System.String phone, global::System.String email)
        {
            TransactionUser transactionUser = new TransactionUser();
            transactionUser.ID = id;
            transactionUser.TransactionID = transactionID;
            transactionUser.UserName = userName;
            transactionUser.FirstName = firstName;
            transactionUser.LastName = lastName;
            transactionUser.Phone = phone;
            transactionUser.Email = email;
            return transactionUser;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid TransactionID
        {
            get
            {
                return _TransactionID;
            }
            set
            {
                OnTransactionIDChanging(value);
                ReportPropertyChanging("TransactionID");
                _TransactionID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TransactionID");
                OnTransactionIDChanged();
            }
        }
        private global::System.Guid _TransactionID;
        partial void OnTransactionIDChanging(global::System.Guid value);
        partial void OnTransactionIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Phone
        {
            get
            {
                return _Phone;
            }
            set
            {
                OnPhoneChanging(value);
                ReportPropertyChanging("Phone");
                _Phone = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Phone");
                OnPhoneChanged();
            }
        }
        private global::System.String _Phone;
        partial void OnPhoneChanging(global::System.String value);
        partial void OnPhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> PhoneExt
        {
            get
            {
                return _PhoneExt;
            }
            set
            {
                OnPhoneExtChanging(value);
                ReportPropertyChanging("PhoneExt");
                _PhoneExt = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PhoneExt");
                OnPhoneExtChanged();
            }
        }
        private Nullable<global::System.Int32> _PhoneExt;
        partial void OnPhoneExtChanging(Nullable<global::System.Int32> value);
        partial void OnPhoneExtChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("ConektBillingModel", "FK_User_Transaction", "Transaction")]
        public Transaction Transaction
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("ConektBillingModel.FK_User_Transaction", "Transaction").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("ConektBillingModel.FK_User_Transaction", "Transaction").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Transaction> TransactionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Transaction>("ConektBillingModel.FK_User_Transaction", "Transaction");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Transaction>("ConektBillingModel.FK_User_Transaction", "Transaction", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
