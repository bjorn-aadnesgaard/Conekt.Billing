@model Conekt.Billing.Models.Json.JsonTransaction
@using Conekt.Billing.Models;
@using Conekt.Billing.Library;
@using Conekt.Billing.Models.Form;
@using Conekt.Billing.Models.Json;

@{
	Layout = "~/Views/Payment/Template.cshtml";

	//Set payment amount to be charged
	Model.Payment.Amount = Transaction.GetPaymentAmount(Model);

	//Form values
	string testModeNofitication = "<strong>TEST MODE ENABLED</strong> - Set your web.config PaymentModule.Settings.Mode value to \"Live\" to enable live transactions and disable this message.";

	//Check if site is in test mode
	bool isTestMode = Conekt.Billing.Configuration.ConfigurationManager.GetConfiguration().Settings.Mode.ToLower() == "test";
	if(isTestMode)
	{
		//Create notification
		Notification nfn = new Notification()
		{
			DisableAnimation = true,
			DisableClose = true,
			Message = testModeNofitication,
			Status = Enums.Status.Warning
		};
		Html.RenderPartial("Notification", nfn);
	}
}

<script type="text/javascript">
	//Set target variables
	var $submitButton = $("#submit-button")
	var $spinTarget = $("#payment-form");
	var $errorTarget = $(".payment-errors");
	var $paymentForm = $("#payment-form");
</script>

@if (!Model.Settings.DisableRemoteScripts) { @Scripts.Render("~/scripts/cart") }
@if (!Model.Settings.DisableRemoteStyles) { @Styles.Render("~/styles/cart") }

<form id="payment-form">
	<div class="payment-errors"></div>

	@*Billing*@
	@{ Html.RenderPartial("Form-Billing", @Model); }

	@*Payment*@
	@{ Html.RenderPartial("Form-Payment", @Model); }

	@*Summary*@
	@{ Html.RenderPartial("Form-Summary", @Model); }

	@*Commands*@
	@{ Html.RenderPartial("Form-Commands", @Model); }
</form>

@{
	Model.Payment.Card = new Card(); //Initialise the card properties
	Html.RenderPartial("Javascript-Merchant", @Model);
}